 FileAccess[fillcolor=green, style="rounded,filled", shape=diamond];
 CodeProcessor ->  FileAccess;
 GetFilePathList[fillcolor=yellow, style="rounded,filled", shape=diamond];
 FileAccess ->  GetFilePathList;
 GetFileList[fillcolor=yellow, style="rounded,filled", shape=diamond];
 FileAccess ->  GetFileList;
 GetFileContent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 FileAccess ->  GetFileContent;
 Form[fillcolor=green, style="rounded,filled", shape=diamond];
 CodeProcessor ->  Form;
 Form1[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  Form1;
 button2_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  button2_Click;
 comboBox1_SelectedIndexChanged[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  comboBox1_SelectedIndexChanged;
 Form1[fillcolor=orange, style="rounded,filled", shape=elipse];
 CodeProcessor ->  Form1;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form1 ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form1 ->  InitializeComponent;
 Program[fillcolor=yellow, style="rounded,filled", shape=elipse];
 CodeProcessor ->  Program;
 Main[fillcolor=yellow, style="rounded,filled", shape=elipse];
 Program ->  Main;
 CodeReader[fillcolor=red, style="rounded,filled", shape=elipse];
 CodeProcessor ->  CodeReader;
 ReadCodeFile[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeReader ->  ReadCodeFile;
 ConvertToDataModel[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeReader ->  ConvertToDataModel;
 ConvertToNaturalLanguage[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeReader ->  ConvertToNaturalLanguage;
 GetIdentifier[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeReader ->  GetIdentifier;
 IsNonExecutable[fillcolor=orange, style="rounded,filled", shape=diamond];
 CodeReader ->  IsNonExecutable;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 IsNonExecutable ->  if ;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 IsNonExecutable ->  if ;
 GetAllCodeElements[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeReader ->  GetAllCodeElements;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 GetAllCodeElements ->  if ;
 CodeSection[fillcolor=red, style="rounded,filled", shape=elipse];
 CodeProcessor ->  CodeSection;
 Visibility[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeSection ->  Visibility;
 ReturnType[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeSection ->  ReturnType;
 Complexity[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeSection ->  Complexity;
 FilePath[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeSection ->  FilePath;
 EndSection[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeSection ->  EndSection;
 CodeSection[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeSection ->  CodeSection;
 CodeSection[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeSection ->  CodeSection;
 CodeWriter[fillcolor=magenta, style="rounded,filled", shape=elipse];
 CodeProcessor ->  CodeWriter;
 ReadCodeFile[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeWriter ->  ReadCodeFile;
 ConvertToNaturalLanguage[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeWriter ->  ConvertToNaturalLanguage;
 GetIdentifier[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeWriter ->  GetIdentifier;
 IsNonExecutable[fillcolor=orange, style="rounded,filled", shape=diamond];
 CodeWriter ->  IsNonExecutable;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 IsNonExecutable ->  if ;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 IsNonExecutable ->  if ;
 GetAllCodeElements[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeWriter ->  GetAllCodeElements;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 GetAllCodeElements ->  if ;
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute[fillcolor=red, style="rounded,filled", shape=elipse];
 CodeProcessor_Properties ->  [global::System_CodeDom_Compiler_GeneratedCodeAttribute;
 [global::System_ComponentModel_EditorBrowsableAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute ->  [global::System_ComponentModel_EditorBrowsableAttribute;
 String_[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute ->  String_;
 String__a_[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute ->  String__a_;
 String__as_a_[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute ->  String__as_a_;
 String__based_on_[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute ->  String__based_on_;
 String_can__[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute ->  String_can__;
 String_In_[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute ->  String_In_;
 String_react_to__[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute ->  String_react_to__;
 String_tab[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute ->  String_tab;
 String_tab_arrow[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute ->  String_tab_arrow;
 System_Windows_Forms_Form[fillcolor=red, style="rounded,filled", shape=elipse];
 Async ->  System_Windows_Forms_Form;
 Form1[fillcolor=yellow, style="rounded,filled", shape=diamond];
 System_Windows_Forms_Form ->  Form1;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=elipse];
 System_Windows_Forms_Form ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=elipse];
 System_Windows_Forms_Form ->  InitializeComponent;
 Main[fillcolor=yellow, style="rounded,filled", shape=elipse];
 System_Windows_Forms_Form ->  Main;
 nonQueryGo_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 System_Windows_Forms_Form ->  nonQueryGo_Click;
 timer1_Tick[fillcolor=yellow, style="rounded,filled", shape=diamond];
 System_Windows_Forms_Form ->  timer1_Tick;
 Form[fillcolor=green, style="rounded,filled", shape=diamond];
 DeviceApplication1 ->  Form;
 FailDetails[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  FailDetails;
 Message[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  Message;
 Trace[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  Trace;
 FailDetails[fillcolor=orange, style="rounded,filled", shape=elipse];
 DeviceApplication1 ->  FailDetails;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 FailDetails ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 FailDetails ->  InitializeComponent;
 Form[fillcolor=red, style="rounded,filled", shape=diamond];
 DeviceApplication1 ->  Form;
 MainForm[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  MainForm;
 LoadTests[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  LoadTests;
 RunTests[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  RunTests;
 UpdateNode[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  UpdateNode;
 RunTestsWorker[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  RunTestsWorker;
 showDetailsMenu_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  showDetailsMenu_Click;
 runTestsMenu_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  runTestsMenu_Click;
 runSelected_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  runSelected_Click;
 ResetTree[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  ResetTree;
 MainForm[fillcolor=orange, style="rounded,filled", shape=elipse];
 DeviceApplication1 ->  MainForm;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 MainForm ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 MainForm ->  InitializeComponent;
 Program[fillcolor=yellow, style="rounded,filled", shape=elipse];
 DeviceApplication1 ->  Program;
 Main[fillcolor=yellow, style="rounded,filled", shape=elipse];
 Program ->  Main;
 [global::System_Diagnostics_DebuggerNonUserCodeAttribute[fillcolor=orange, style="rounded,filled", shape=elipse];
 DeviceApplication1_Properties ->  [global::System_Diagnostics_DebuggerNonUserCodeAttribute;
 Resources[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_Diagnostics_DebuggerNonUserCodeAttribute ->  Resources;
 [global::System_ComponentModel_EditorBrowsableAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_Diagnostics_DebuggerNonUserCodeAttribute ->  [global::System_ComponentModel_EditorBrowsableAttribute;
 System_Windows_Forms_Form[fillcolor=red, style="rounded,filled", shape=elipse];
 TableEditor ->  System_Windows_Forms_Form;
 Form1[fillcolor=yellow, style="rounded,filled", shape=diamond];
 System_Windows_Forms_Form ->  Form1;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=elipse];
 System_Windows_Forms_Form ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=elipse];
 System_Windows_Forms_Form ->  InitializeComponent;
 Main[fillcolor=yellow, style="rounded,filled", shape=elipse];
 System_Windows_Forms_Form ->  Main;
 connectBtn_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 System_Windows_Forms_Form ->  connectBtn_Click;
 GetDatabases[fillcolor=yellow, style="rounded,filled", shape=diamond];
 System_Windows_Forms_Form ->  GetDatabases;
 databaseList_SelectedIndexChanged[fillcolor=yellow, style="rounded,filled", shape=diamond];
 System_Windows_Forms_Form ->  databaseList_SelectedIndexChanged;
 tables_SelectedIndexChanged[fillcolor=yellow, style="rounded,filled", shape=diamond];
 System_Windows_Forms_Form ->  tables_SelectedIndexChanged;
 updateBtn_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 System_Windows_Forms_Form ->  updateBtn_Click;
 Form[fillcolor=yellow, style="rounded,filled", shape=diamond];
 DataModel ->  Form;
 Form1[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  Form1;
 Form1[fillcolor=orange, style="rounded,filled", shape=elipse];
 DataModel ->  Form1;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form1 ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form1 ->  InitializeComponent;
 Program[fillcolor=yellow, style="rounded,filled", shape=elipse];
 DataModel ->  Program;
 Main[fillcolor=yellow, style="rounded,filled", shape=elipse];
 Program ->  Main;
 DataModel[fillcolor=yellow, style="rounded,filled", shape=diamond];
 DataModel_BL ->  DataModel;
 rootCodeElements[fillcolor=yellow, style="rounded,filled", shape=diamond];
 DataModel ->  rootCodeElements;
 CodeElement[fillcolor=green, style="rounded,filled", shape=diamond];
 DataModel_DL_CodeEntity ->  CodeElement;
 Name[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  Name;
 Childs[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  Childs;
 Visibility[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  Visibility;
 CodeElement[fillcolor=red, style="rounded,filled", shape=diamond];
 DataModel_DL_CodeEntity ->  CodeElement;
 ElementFile[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  ElementFile;
 ElementStartLine[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  ElementStartLine;
 ElementEndLine[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  ElementEndLine;
 ElementName[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  ElementName;
 ElementAccessType[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  ElementAccessType;
 IsStatic[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  IsStatic;
 ElementNamespace[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  ElementNamespace;
 Parent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  Parent;
 DefaultClass[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  DefaultClass;
 CodeElement[fillcolor=red, style="rounded,filled", shape=diamond];
 DataModel_DL_CodeEntity ->  CodeElement;
 ElementFile[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  ElementFile;
 Parameters[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  Parameters;
 ElementNamespaceName[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  ElementNamespaceName;
 Result[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  Result;
 ElementClassName[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  ElementClassName;
 ElementStartLine[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  ElementStartLine;
 ElementEndLine[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  ElementEndLine;
 ElementName[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  ElementName;
 ElementClass[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  ElementClass;
 ElementAccessType[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  ElementAccessType;
 IsStatic[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  IsStatic;
 ToString[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  ToString;
 DefaultMethod[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  DefaultMethod;
 CodeElement[fillcolor=magenta, style="rounded,filled", shape=diamond];
 DataModel_DL_CodeEntity ->  CodeElement;
 ElementFile[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  ElementFile;
 ElementStartLine[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  ElementStartLine;
 ElementEndLine[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  ElementEndLine;
 ElementName[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  ElementName;
 DefaultNamespace[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  DefaultNamespace;
 CodeElement[fillcolor=yellow, style="rounded,filled", shape=diamond];
 DataModel_DL_CodeEntity ->  CodeElement;
 ElementName[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CodeElement ->  ElementName;
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 DataModel_Properties ->  [global::System_CodeDom_Compiler_GeneratedCodeAttribute;
 [global::System_ComponentModel_EditorBrowsableAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute ->  [global::System_ComponentModel_EditorBrowsableAttribute;
 Diagram[fillcolor=yellow, style="rounded,filled", shape=diamond];
 DiagramCreator ->  Diagram;
 Diagram[fillcolor=yellow, style="rounded,filled", shape=diamond];
 DiagramCreator ->  Diagram;
 ExecuteDiagram[fillcolor=yellow, style="rounded,filled", shape=diamond];
 DiagramCreator ->  ExecuteDiagram;
 Form[fillcolor=red, style="rounded,filled", shape=diamond];
 DiagramCreator ->  Form;
 Form1[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  Form1;
 Test[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  Test;
 button1_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  button1_Click;
 button2_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  button2_Click;
 CreateDiagramSource[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  CreateDiagramSource;
 CreateDiagramSource[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  CreateDiagramSource;
 Form1[fillcolor=orange, style="rounded,filled", shape=elipse];
 DiagramCreator ->  Form1;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form1 ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form1 ->  InitializeComponent;
 Program[fillcolor=yellow, style="rounded,filled", shape=elipse];
 DiagramCreator ->  Program;
 Main[fillcolor=yellow, style="rounded,filled", shape=elipse];
 Program ->  Main;
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 DiagramCreator_Properties ->  [global::System_CodeDom_Compiler_GeneratedCodeAttribute;
 [global::System_ComponentModel_EditorBrowsableAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute ->  [global::System_ComponentModel_EditorBrowsableAttribute;
 Form[fillcolor=gray, style="rounded,filled", shape=diamond];
 DataPersistency ->  Form;
 Form1[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  Form1;
 databaseOptionsToolStripMenuItem_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  databaseOptionsToolStripMenuItem_Click;
 traceOptionsToolStripMenuItem_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  traceOptionsToolStripMenuItem_Click;
 sQLViewToolStripMenuItem_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  sQLViewToolStripMenuItem_Click;
 Form1[fillcolor=orange, style="rounded,filled", shape=elipse];
 DataPersistency ->  Form1;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form1 ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form1 ->  InitializeComponent;
 Program[fillcolor=yellow, style="rounded,filled", shape=elipse];
 DataPersistency ->  Program;
 Main[fillcolor=yellow, style="rounded,filled", shape=elipse];
 Program ->  Main;
 INotifyPropertyChanged[fillcolor=red, style="rounded,filled", shape=diamond];
 DataPersistency_BL_UserOptions ->  INotifyPropertyChanged;
 LogNumbersNone[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogNumbersNone;
 LogNumbersResults[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogNumbersResults;
 LogNumbersParameters[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogNumbersParameters;
 LogNumbersCode[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogNumbersCode;
 LogObjectsNone[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogObjectsNone;
 LogObjectsResults[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogObjectsResults;
 LogObjectsParameters[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogObjectsParameters;
 LogObjectsCode[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogObjectsCode;
 LogRelationsNone[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogRelationsNone;
 LogRelationsResults[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogRelationsResults;
 LogRelationsParameters[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogRelationsParameters;
 LogRelationsCode[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogRelationsCode;
 LogLogicsNone[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogLogicsNone;
 LogLogicsResults[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogLogicsResults;
 LogLogicsParameters[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogLogicsParameters;
 LogLogicsCode[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogLogicsCode;
 levelNumbers[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  levelNumbers;
 levelObjects[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  levelObjects;
 levelRelations[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  levelRelations;
 levelLogics[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  levelLogics;
 OnPropertyChanged[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  OnPropertyChanged;
 UserOptions[fillcolor=green, style="rounded,filled", shape=elipse];
 DataPersistency_BL_UserOptions ->  UserOptions;
 LogingSystemOptionsFile[fillcolor=yellow, style="rounded,filled", shape=diamond];
 UserOptions ->  LogingSystemOptionsFile;
 LogingSystemTraceFile[fillcolor=yellow, style="rounded,filled", shape=diamond];
 UserOptions ->  LogingSystemTraceFile;
 GetFileInfo[fillcolor=yellow, style="rounded,filled", shape=diamond];
 UserOptions ->  GetFileInfo;
 FileAccess[fillcolor=green, style="rounded,filled", shape=diamond];
 DataPersistency_DL_FileAccess ->  FileAccess;
 GetFilePathList[fillcolor=yellow, style="rounded,filled", shape=diamond];
 FileAccess ->  GetFilePathList;
 GetFileList[fillcolor=yellow, style="rounded,filled", shape=diamond];
 FileAccess ->  GetFileList;
 GetFileContent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 FileAccess ->  GetFileContent;
 TextFileAccess[fillcolor=orange, style="rounded,filled", shape=diamond];
 DataPersistency_DL_FileAccess ->  TextFileAccess;
 SaveModel[fillcolor=yellow, style="rounded,filled", shape=diamond];
 TextFileAccess ->  SaveModel;
 RestoreModel[fillcolor=yellow, style="rounded,filled", shape=diamond];
 TextFileAccess ->  RestoreModel;
 SymbolItem[fillcolor=red, style="rounded,filled", shape=diamond];
 DataPersistency_DL_CommenAccess_ObjectsFromNumbers ->  SymbolItem;
 SymbolItem[fillcolor=yellow, style="rounded,filled", shape=diamond];
 SymbolItem ->  SymbolItem;
 SymbolItem[fillcolor=yellow, style="rounded,filled", shape=diamond];
 SymbolItem ->  SymbolItem;
 ToString[fillcolor=yellow, style="rounded,filled", shape=diamond];
 SymbolItem ->  ToString;
 IsNotNull[fillcolor=yellow, style="rounded,filled", shape=elipse];
 SymbolItem ->  IsNotNull;
 IsUnknown[fillcolor=yellow, style="rounded,filled", shape=elipse];
 SymbolItem ->  IsUnknown;
 Null[fillcolor=yellow, style="rounded,filled", shape=diamond];
 SymbolItem ->  Null;
 Unknown[fillcolor=yellow, style="rounded,filled", shape=diamond];
 SymbolItem ->  Unknown;
 LoggingSystem[fillcolor=red, style="rounded,filled", shape=diamond];
 DataPersistency_DL_Logging ->  LoggingSystem;
 LogAdministrativeTasks[fillcolor=yellow, style="rounded,filled", shape=diamond];
 LoggingSystem ->  LogAdministrativeTasks;
 TraceCode[fillcolor=yellow, style="rounded,filled", shape=diamond];
 LoggingSystem ->  TraceCode;
 LogMessage[fillcolor=yellow, style="rounded,filled", shape=diamond];
 LoggingSystem ->  LogMessage;
 BranchNo[fillcolor=yellow, style="rounded,filled", shape=diamond];
 LoggingSystem ->  BranchNo;
 BranchName[fillcolor=yellow, style="rounded,filled", shape=diamond];
 LoggingSystem ->  BranchName;
 LogTrace[fillcolor=yellow, style="rounded,filled", shape=diamond];
 LoggingSystem ->  LogTrace;
 LogMethod[fillcolor=yellow, style="rounded,filled", shape=diamond];
 LoggingSystem ->  LogMethod;
 INotifyPropertyChanged[fillcolor=red, style="rounded,filled", shape=diamond];
 DataPersistency_DL_Logging ->  INotifyPropertyChanged;
 LogMessage[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogMessage;
 LogTrace[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogTrace;
 BranchName[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  BranchName;
 BranchNo[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  BranchNo;
 LogMethod[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogMethod;
 OnPropertyChanged[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  OnPropertyChanged;
 OperatorLocation[fillcolor=yellow, style="rounded,filled", shape=diamond];
 DataPersistency_DL_ServerAccess ->  OperatorLocation;
 ToString[fillcolor=yellow, style="rounded,filled", shape=diamond];
 OperatorLocation ->  ToString;
 OperatorMultiplicity[fillcolor=yellow, style="rounded,filled", shape=diamond];
 DataPersistency_DL_ServerAccess ->  OperatorMultiplicity;
 ToString[fillcolor=yellow, style="rounded,filled", shape=diamond];
 OperatorMultiplicity ->  ToString;
 OperatorID[fillcolor=magenta, style="rounded,filled", shape=diamond];
 DataPersistency_DL_ServerAccess ->  OperatorID;
 OperatorID[fillcolor=yellow, style="rounded,filled", shape=diamond];
 OperatorID ->  OperatorID;
 OperatorID[fillcolor=yellow, style="rounded,filled", shape=diamond];
 OperatorID ->  OperatorID;
 ToString[fillcolor=yellow, style="rounded,filled", shape=diamond];
 OperatorID ->  ToString;
 Exists[fillcolor=yellow, style="rounded,filled", shape=diamond];
 OperatorID ->  Exists;
 hasMultiplicity[fillcolor=yellow, style="rounded,filled", shape=diamond];
 OperatorID ->  hasMultiplicity;
 ServerAccessInterface[fillcolor=green, style="rounded,filled", shape=diamond];
 DataPersistency_DL_ServerAccess ->  ServerAccessInterface;
 AcceptSymbols[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  AcceptSymbols;
 AcceptOperators[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  AcceptOperators;
 AcceptRelations[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  AcceptRelations;
 ServerAccessInterface[fillcolor=red, style="rounded,filled", shape=diamond];
 DataPersistency_DL_ServerAccess ->  ServerAccessInterface;
 AcceptSymbols[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  AcceptSymbols;
 AcceptOperators[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  AcceptOperators;
 AcceptRelations[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  AcceptRelations;
 LoggingSystem_Log[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  LoggingSystem_Log;
 getConnectionState[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  getConnectionState;
 DatabaseName[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  DatabaseName;
 DatabaseExists[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  DatabaseExists;
 TryToOpenConnection[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  TryToOpenConnection;
 ServerAccessMySQL[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  ServerAccessMySQL;
 ServerAccessMySQL[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  ServerAccessMySQL;
 ConnectToDatabase[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  ConnectToDatabase;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 ConnectToDatabase ->  if ;
 ~ServerAccessMySQL[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  ~ServerAccessMySQL;
 GetSymbolNamesByID[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  GetSymbolNamesByID;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 GetSymbolNamesByID ->  if ;
 name [fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  name ;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 name  ->  if ;
 CreateSymbolByName[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  CreateSymbolByName;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 CreateSymbolByName ->  if ;
 CreateSymbolAlias[fillcolor=orange, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  CreateSymbolAlias;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 CreateSymbolAlias ->  if ;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 if  ->  if ;
 changes [fillcolor=yellow, style="rounded,filled", shape=elipse];
 CreateSymbolAlias ->  changes ;
 GetAllOperators[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  GetAllOperators;
 GetOperatorNamesByID[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  GetOperatorNamesByID;
 name [fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  name ;
 GetContent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  GetContent;
 IsTransitive[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  IsTransitive;
 CreateRelation[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  CreateRelation;
 CreateSymbolTable[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  CreateSymbolTable;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 CreateSymbolTable ->  if ;
 ServerAccessInterface[fillcolor=red, style="rounded,filled", shape=diamond];
 DataPersistency_DL_ServerAccess ->  ServerAccessInterface;
 AcceptSymbols[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  AcceptSymbols;
 AcceptOperators[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  AcceptOperators;
 AcceptRelations[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  AcceptRelations;
 TryToOpenConnection[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  TryToOpenConnection;
 ServerAccessSqlServer[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  ServerAccessSqlServer;
 ServerAccessSqlServer[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  ServerAccessSqlServer;
 getConnectionState[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  getConnectionState;
 DatabaseName[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  DatabaseName;
 DatabaseExists[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  DatabaseExists;
 getSqlServerConnection[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  getSqlServerConnection;
 CreateSymbolAlias[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  CreateSymbolAlias;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 CreateSymbolAlias ->  if ;
 +GetSymbolNamesByID[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  +GetSymbolNamesByID;
 +GetSymbolsByName[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  +GetSymbolsByName;
 CreateSymbolAlias[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  CreateSymbolAlias;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 CreateSymbolAlias ->  if ;
 +CreateSymbolByName[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  +CreateSymbolByName;
 getRecord[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  getRecord;
 +GetSymbolsByName[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  +GetSymbolsByName;
 +GetSymbolNamesByID[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  +GetSymbolNamesByID;
 GetContent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  GetContent;
 GetOperatorsByName[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  GetOperatorsByName;
 GetAllOperators[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  GetAllOperators;
 CreateRelationAsNew[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  CreateRelationAsNew;
 IsTransitive[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  IsTransitive;
 +GetRelationsByName[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  +GetRelationsByName;
 CreateRelation[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  CreateRelation;
 GetSymbolNamesByID[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  GetSymbolNamesByID;
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 DataPersistency_Properties ->  [global::System_CodeDom_Compiler_GeneratedCodeAttribute;
 [global::System_ComponentModel_EditorBrowsableAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute ->  [global::System_ComponentModel_EditorBrowsableAttribute;
 Form[fillcolor=red, style="rounded,filled", shape=diamond];
 DataPersistency_UI_Logging ->  Form;
 SQLView[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  SQLView;
 Log_PropertyChanged[fillcolor=yellow, style="rounded,filled", shape=elipse];
 Form ->  Log_PropertyChanged;
 ColorizeMethod[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  ColorizeMethod;
 InitializeCustomLayout[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  InitializeCustomLayout;
 parseResult[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  parseResult;
 parseResult[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  parseResult;
 button1_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  button1_Click;
 button2_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  button2_Click;
 Log[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  Log;
 LogResult[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  LogResult;
 LogHumanResult[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  LogHumanResult;
 LogResult[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  LogResult;
 LogResult[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  LogResult;
 LogResult[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  LogResult;
 SQLView[fillcolor=orange, style="rounded,filled", shape=elipse];
 DataPersistency_UI_Logging ->  SQLView;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 SQLView ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 SQLView ->  InitializeComponent;
 Form[fillcolor=orange, style="rounded,filled", shape=diamond];
 DataPersistency_UI_UserOptions ->  Form;
 ConnectionStringEditor[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  ConnectionStringEditor;
 button1_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  button1_Click;
 ConnectionStringEditor[fillcolor=orange, style="rounded,filled", shape=elipse];
 DataPersistency_UI_UserOptions ->  ConnectionStringEditor;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ConnectionStringEditor ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ConnectionStringEditor ->  InitializeComponent;
 DatabaseOptions[fillcolor=orange, style="rounded,filled", shape=elipse];
 DataPersistency_UI_UserOptions ->  DatabaseOptions;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 DatabaseOptions ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 DatabaseOptions ->  InitializeComponent;
 Form[fillcolor=magenta, style="rounded,filled", shape=diamond];
 DataPersistency_UI_UserOptions ->  Form;
 TraceOptions[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  TraceOptions;
 GetOptionName[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  GetOptionName;
 ShowLastModel[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  ShowLastModel;
 logingOptionsModelReferince_PropertyChanged[fillcolor=yellow, style="rounded,filled", shape=elipse];
 Form ->  logingOptionsModelReferince_PropertyChanged;
 ResetFromDefaultsTextButton_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  ResetFromDefaultsTextButton_Click;
 TraceOptions[fillcolor=orange, style="rounded,filled", shape=elipse];
 DataPersistency_UI_UserOptions ->  TraceOptions;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 TraceOptions ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 TraceOptions ->  InitializeComponent;
 Form[fillcolor=green, style="rounded,filled", shape=diamond];
 NaturalLanguageProcessor ->  Form;
 Form1[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  Form1;
 naturalFromInternalToolStripMenuItem_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  naturalFromInternalToolStripMenuItem_Click;
 internalFromNaturalToolStripMenuItem_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  internalFromNaturalToolStripMenuItem_Click;
 Form1[fillcolor=orange, style="rounded,filled", shape=elipse];
 NaturalLanguageProcessor ->  Form1;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form1 ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form1 ->  InitializeComponent;
 Program[fillcolor=yellow, style="rounded,filled", shape=elipse];
 NaturalLanguageProcessor ->  Program;
 Main[fillcolor=yellow, style="rounded,filled", shape=elipse];
 Program ->  Main;
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 NaturalLanguageProcessor_Properties ->  [global::System_CodeDom_Compiler_GeneratedCodeAttribute;
 [global::System_ComponentModel_EditorBrowsableAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute ->  [global::System_ComponentModel_EditorBrowsableAttribute;
 Form[fillcolor=yellow, style="rounded,filled", shape=diamond];
 NaturalLanguageProcessor_Test ->  Form;
 InternalFromNatural[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  InternalFromNatural;
 InternalFromNatural[fillcolor=orange, style="rounded,filled", shape=elipse];
 NaturalLanguageProcessor_Test ->  InternalFromNatural;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 InternalFromNatural ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 InternalFromNatural ->  InitializeComponent;
 Form[fillcolor=green, style="rounded,filled", shape=diamond];
 NaturalLanguageProcessor_Test ->  Form;
 NaturalFromInternal[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  NaturalFromInternal;
 richTextBox1_TextChanged[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  richTextBox1_TextChanged;
 EvaluateExpression[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  EvaluateExpression;
 NaturalFromInternal[fillcolor=orange, style="rounded,filled", shape=elipse];
 NaturalLanguageProcessor_Test ->  NaturalFromInternal;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 NaturalFromInternal ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 NaturalFromInternal ->  InitializeComponent;
 Form[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ObjectCollision ->  Form;
 Form1[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  Form1;
 Form1[fillcolor=orange, style="rounded,filled", shape=elipse];
 ObjectCollision ->  Form1;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form1 ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form1 ->  InitializeComponent;
 Program[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ObjectCollision ->  Program;
 Main[fillcolor=yellow, style="rounded,filled", shape=elipse];
 Program ->  Main;
 CurrentStateDataSet[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ObjectCollision_BL ->  CurrentStateDataSet;
 GetTable[fillcolor=yellow, style="rounded,filled", shape=elipse];
 CurrentStateDataSet ->  GetTable;
 [global::System_Serializable[fillcolor=red, style="rounded,filled", shape=elipse];
 ObjectCollision_BL ->  [global::System_Serializable;
 [global::System_Serializable[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_Serializable ->  [global::System_Serializable;
 [global::System_Serializable[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_Serializable ->  [global::System_Serializable;
 global::System_Data_DataRow[fillcolor=yellow, style="rounded,filled", shape=diamond];
 [global::System_Serializable ->  global::System_Data_DataRow;
 global::System_Data_DataRow[fillcolor=yellow, style="rounded,filled", shape=diamond];
 [global::System_Serializable ->  global::System_Data_DataRow;
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_Serializable ->  [global::System_CodeDom_Compiler_GeneratedCodeAttribute;
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_Serializable ->  [global::System_CodeDom_Compiler_GeneratedCodeAttribute;
 [global::System_ComponentModel_DesignerCategoryAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ObjectCollision_BL_CurrentStateDataSetTableAdapters ->  [global::System_ComponentModel_DesignerCategoryAttribute;
 [global::System_ComponentModel_DesignerCategoryAttribute[fillcolor=red, style="rounded,filled", shape=elipse];
 ObjectCollision_BL_CurrentStateDataSetTableAdapters ->  [global::System_ComponentModel_DesignerCategoryAttribute;
 [global::System_Diagnostics_DebuggerNonUserCodeAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_ComponentModel_DesignerCategoryAttribute ->  [global::System_Diagnostics_DebuggerNonUserCodeAttribute;
 [global::System_Diagnostics_DebuggerNonUserCodeAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_ComponentModel_DesignerCategoryAttribute ->  [global::System_Diagnostics_DebuggerNonUserCodeAttribute;
 [global::System_Diagnostics_DebuggerNonUserCodeAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_ComponentModel_DesignerCategoryAttribute ->  [global::System_Diagnostics_DebuggerNonUserCodeAttribute;
 TableAdapter_Update[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_ComponentModel_DesignerCategoryAttribute ->  TableAdapter_Update;
 = [fillcolor=yellow, style="rounded,filled", shape=elipse];
 TableAdapter_Update ->  = ;
 [global::System_Diagnostics_DebuggerNonUserCodeAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_ComponentModel_DesignerCategoryAttribute ->  [global::System_Diagnostics_DebuggerNonUserCodeAttribute;
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_ComponentModel_DesignerCategoryAttribute ->  [global::System_CodeDom_Compiler_GeneratedCodeAttribute;
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ObjectCollision_Properties ->  [global::System_CodeDom_Compiler_GeneratedCodeAttribute;
 [global::System_ComponentModel_EditorBrowsableAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute ->  [global::System_ComponentModel_EditorBrowsableAttribute;
 Form[fillcolor=yellow, style="rounded,filled", shape=diamond];
 SystemInterface ->  Form;
 Form1[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  Form1;
 Form1[fillcolor=orange, style="rounded,filled", shape=elipse];
 SystemInterface ->  Form1;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form1 ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form1 ->  InitializeComponent;
 Program[fillcolor=yellow, style="rounded,filled", shape=elipse];
 SystemInterface ->  Program;
 Main[fillcolor=yellow, style="rounded,filled", shape=elipse];
 Program ->  Main;
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 SystemInterface_Properties ->  [global::System_CodeDom_Compiler_GeneratedCodeAttribute;
 [global::System_ComponentModel_EditorBrowsableAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute ->  [global::System_ComponentModel_EditorBrowsableAttribute;
 Program[fillcolor=orange, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1 ->  Program;
 getMySQLConnection[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Program ->  getMySQLConnection;
 Main[fillcolor=yellow, style="rounded,filled", shape=elipse];
 Program ->  Main;
 INotifyPropertyChanged[fillcolor=red, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1_BL ->  INotifyPropertyChanged;
 Oracle[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  Oracle;
 MySql[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  MySql;
 SqlServer[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  SqlServer;
 Postgree[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  Postgree;
 SqLite[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  SqLite;
 NotifyPropertyChanged[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  NotifyPropertyChanged;
 DataSet1[fillcolor=orange, style="rounded,filled", shape=diamond];
 WindowsFormsApplication1_BL ->  DataSet1;
 AttachTable[fillcolor=yellow, style="rounded,filled", shape=diamond];
 DataSet1 ->  AttachTable;
 DataSet1[fillcolor=yellow, style="rounded,filled", shape=diamond];
 DataSet1 ->  DataSet1;
 [global::System_Serializable[fillcolor=yellow, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1_BL ->  [global::System_Serializable;
 [global::System_Serializable[fillcolor=yellow, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1_BL ->  [global::System_Serializable;
 FileAccess[fillcolor=orange, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1 ->  FileAccess;
 GetFilePathList[fillcolor=yellow, style="rounded,filled", shape=diamond];
 FileAccess ->  GetFilePathList;
 GetFileList[fillcolor=yellow, style="rounded,filled", shape=diamond];
 FileAccess ->  GetFileList;
 TextFileAccess[fillcolor=orange, style="rounded,filled", shape=diamond];
 WindowsFormsApplication1_DataAccess_FileAccess ->  TextFileAccess;
 SaveModel[fillcolor=yellow, style="rounded,filled", shape=diamond];
 TextFileAccess ->  SaveModel;
 RestoreModel[fillcolor=yellow, style="rounded,filled", shape=diamond];
 TextFileAccess ->  RestoreModel;
 RelationItem[fillcolor=orange, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1_Level_Logic_From_Relations ->  RelationItem;
 RelationItem[fillcolor=yellow, style="rounded,filled", shape=elipse];
 RelationItem ->  RelationItem;
 ToString[fillcolor=yellow, style="rounded,filled", shape=diamond];
 RelationItem ->  ToString;
 ServerAccessInterface[fillcolor=green, style="rounded,filled", shape=diamond];
 WindowsFormsApplication1_BL ->  ServerAccessInterface;
 AcceptSymbols[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  AcceptSymbols;
 AcceptOperators[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  AcceptOperators;
 AcceptRelations[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  AcceptRelations;
 ServerAccessInterface[fillcolor=red, style="rounded,filled", shape=diamond];
 WindowsFormsApplication1_BL ->  ServerAccessInterface;
 AcceptSymbols[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  AcceptSymbols;
 AcceptOperators[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  AcceptOperators;
 AcceptRelations[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  AcceptRelations;
 LoggingSystem_Log[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  LoggingSystem_Log;
 ServerAccessMySQL[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  ServerAccessMySQL;
 getConnectionState[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  getConnectionState;
 DatabaseName[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  DatabaseName;
 DatabaseExists[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  DatabaseExists;
 getMySQLConnection[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  getMySQLConnection;
 CreateSymbolAlias[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  CreateSymbolAlias;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 CreateSymbolAlias ->  if ;
 +GetSymbolNamesByID[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  +GetSymbolNamesByID;
 +GetSymbolNamesByID[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  +GetSymbolNamesByID;
 +GetSymbolsByName[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  +GetSymbolsByName;
 +CreateSymbolByName[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  +CreateSymbolByName;
 getRecord[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  getRecord;
 +GetSymbolNamesByID[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  +GetSymbolNamesByID;
 +GetSymbolsByName[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  +GetSymbolsByName;
 GetContent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  GetContent;
 GetOperatorsByName[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  GetOperatorsByName;
 GetAllOperators[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  GetAllOperators;
 CreateRelation[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  CreateRelation;
 IsTransitive[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  IsTransitive;
 +GetRelationsByName[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  +GetRelationsByName;
 CreateRelation2[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  CreateRelation2;
 GetSymbolNamesByID[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  GetSymbolNamesByID;
 ServerAccessInterface[fillcolor=red, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1_BL ->  ServerAccessInterface;
 AcceptSymbols[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  AcceptSymbols;
 AcceptOperators[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  AcceptOperators;
 AcceptRelations[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  AcceptRelations;
 ServerAccessSqlServer[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  ServerAccessSqlServer;
 ServerAccessSqlServer[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  ServerAccessSqlServer;
 getConnectionState[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  getConnectionState;
 DatabaseName[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  DatabaseName;
 DatabaseExists[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  DatabaseExists;
 getSqlServerConnection[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  getSqlServerConnection;
 CreateSymbolAlias[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  CreateSymbolAlias;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 CreateSymbolAlias ->  if ;
 +GetSymbolNamesByID[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  +GetSymbolNamesByID;
 +GetSymbolNamesByID[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  +GetSymbolNamesByID;
 +GetSymbolsByName[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  +GetSymbolsByName;
 CreateSymbolAlias[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  CreateSymbolAlias;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 CreateSymbolAlias ->  if ;
 +CreateSymbolByName[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  +CreateSymbolByName;
 getRecord[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  getRecord;
 +GetSymbolsByName[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  +GetSymbolsByName;
 +GetSymbolNamesByID[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  +GetSymbolNamesByID;
 GetContent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  GetContent;
 GetOperatorsByName[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  GetOperatorsByName;
 GetAllOperators[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  GetAllOperators;
 CreateRelationAsNew[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  CreateRelationAsNew;
 IsTransitive[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  IsTransitive;
 +GetRelationsByName[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  +GetRelationsByName;
 CreateRelation[fillcolor=yellow, style="rounded,filled", shape=diamond];
 ServerAccessInterface ->  CreateRelation;
 GetSymbolNamesByID[fillcolor=yellow, style="rounded,filled", shape=elipse];
 ServerAccessInterface ->  GetSymbolNamesByID;
 SymbolCollection[fillcolor=red, style="rounded,filled", shape=diamond];
 WindowsFormsApplication1_Level_Objects_From_Numbers ->  SymbolCollection;
 SymbolCollection[fillcolor=yellow, style="rounded,filled", shape=elipse];
 SymbolCollection ->  SymbolCollection;
 SymbolCollection[fillcolor=yellow, style="rounded,filled", shape=diamond];
 SymbolCollection ->  SymbolCollection;
 SymbolCollection[fillcolor=yellow, style="rounded,filled", shape=diamond];
 SymbolCollection ->  SymbolCollection;
 GetSymbolByID[fillcolor=yellow, style="rounded,filled", shape=elipse];
 SymbolCollection ->  GetSymbolByID;
 GetSymbolCollection[fillcolor=yellow, style="rounded,filled", shape=elipse];
 SymbolCollection ->  GetSymbolCollection;
 ForceSymbolCollection[fillcolor=yellow, style="rounded,filled", shape=elipse];
 SymbolCollection ->  ForceSymbolCollection;
 GetSynonimesCollection[fillcolor=yellow, style="rounded,filled", shape=elipse];
 SymbolCollection ->  GetSynonimesCollection;
 Count[fillcolor=yellow, style="rounded,filled", shape=diamond];
 SymbolCollection ->  Count;
 Count[fillcolor=yellow, style="rounded,filled", shape=diamond];
 SymbolCollection ->  Count;
 Count[fillcolor=yellow, style="rounded,filled", shape=diamond];
 SymbolCollection ->  Count;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 Count ->  if ;
 Exists[fillcolor=yellow, style="rounded,filled", shape=diamond];
 SymbolCollection ->  Exists;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 Exists ->  if ;
 ToString[fillcolor=yellow, style="rounded,filled", shape=diamond];
 SymbolCollection ->  ToString;
 GetSymbolCollectionByString[fillcolor=yellow, style="rounded,filled", shape=elipse];
 SymbolCollection ->  GetSymbolCollectionByString;
 ArrayToString[fillcolor=yellow, style="rounded,filled", shape=diamond];
 SymbolCollection ->  ArrayToString;
 SymbolItem[fillcolor=red, style="rounded,filled", shape=diamond];
 WindowsFormsApplication1_Level_Objects_From_Numbers ->  SymbolItem;
 SymbolItem[fillcolor=yellow, style="rounded,filled", shape=diamond];
 SymbolItem ->  SymbolItem;
 ToString[fillcolor=yellow, style="rounded,filled", shape=diamond];
 SymbolItem ->  ToString;
 IsNotNull[fillcolor=yellow, style="rounded,filled", shape=elipse];
 SymbolItem ->  IsNotNull;
 IsUnknown[fillcolor=yellow, style="rounded,filled", shape=elipse];
 SymbolItem ->  IsUnknown;
 Null[fillcolor=yellow, style="rounded,filled", shape=diamond];
 SymbolItem ->  Null;
 Unknown[fillcolor=yellow, style="rounded,filled", shape=diamond];
 SymbolItem ->  Unknown;
 OperatorCollection[fillcolor=red, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1_Level_Operator_From_Numbers ->  OperatorCollection;
 OperatorCollection[fillcolor=yellow, style="rounded,filled", shape=elipse];
 OperatorCollection ->  OperatorCollection;
 SolveRelation[fillcolor=red, style="rounded,filled", shape=diamond];
 OperatorCollection ->  SolveRelation;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 SolveRelation ->  if ;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 SolveRelation ->  if ;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 SolveRelation ->  if ;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 SolveRelation ->  if ;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 SolveRelation ->  if ;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 SolveRelation ->  if ;
 IsTransitive[fillcolor=yellow, style="rounded,filled", shape=diamond];
 OperatorCollection ->  IsTransitive;
 serverAccess_IsTransitive[fillcolor=yellow, style="rounded,filled", shape=elipse];
 IsTransitive ->  serverAccess_IsTransitive;
 InRelation[fillcolor=yellow, style="rounded,filled", shape=diamond];
 OperatorCollection ->  InRelation;
 GetRelationOperatorID[fillcolor=yellow, style="rounded,filled", shape=diamond];
 OperatorCollection ->  GetRelationOperatorID;
 SetRelation[fillcolor=yellow, style="rounded,filled", shape=diamond];
 OperatorCollection ->  SetRelation;
 SetRelation[fillcolor=yellow, style="rounded,filled", shape=diamond];
 OperatorCollection ->  SetRelation;
 serverAccess_CreateRelation[fillcolor=yellow, style="rounded,filled", shape=elipse];
 SetRelation ->  serverAccess_CreateRelation;
 GetAllOperators[fillcolor=yellow, style="rounded,filled", shape=elipse];
 OperatorCollection ->  GetAllOperators;
 Count[fillcolor=yellow, style="rounded,filled", shape=diamond];
 OperatorCollection ->  Count;
 GetOperatorsByName[fillcolor=yellow, style="rounded,filled", shape=elipse];
 OperatorCollection ->  GetOperatorsByName;
 GetLeafsByRelation[fillcolor=yellow, style="rounded,filled", shape=elipse];
 OperatorCollection ->  GetLeafsByRelation;
 getRecord[fillcolor=yellow, style="rounded,filled", shape=elipse];
 OperatorCollection ->  getRecord;
 OperatorItem[fillcolor=green, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1_Level_Operator_From_Numbers ->  OperatorItem;
 OperatorItem[fillcolor=yellow, style="rounded,filled", shape=diamond];
 OperatorItem ->  OperatorItem;
 ToString[fillcolor=yellow, style="rounded,filled", shape=diamond];
 OperatorItem ->  ToString;
 IsNotNull[fillcolor=yellow, style="rounded,filled", shape=elipse];
 OperatorItem ->  IsNotNull;
 DecodePhrase[fillcolor=orange, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1_CD ->  DecodePhrase;
 CodeStringToIntegerString[fillcolor=yellow, style="rounded,filled", shape=elipse];
 DecodePhrase ->  CodeStringToIntegerString;
 foreach [fillcolor=yellow, style="rounded,filled", shape=elipse];
 CodeStringToIntegerString ->  foreach ;
 Decode[fillcolor=yellow, style="rounded,filled", shape=diamond];
 DecodePhrase ->  Decode;
 Symbol[fillcolor=red, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1 ->  Symbol;
 SymbolID[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Symbol ->  SymbolID;
 Name[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Symbol ->  Name;
 Symbol[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Symbol ->  Symbol;
 Symbol[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Symbol ->  Symbol;
 Symbol[fillcolor=yellow, style="rounded,filled", shape=elipse];
 Symbol ->  Symbol;
 getSymbolName[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Symbol ->  getSymbolName;
 toString[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Symbol ->  toString;
 RegisterSymbolIfNotExists[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Symbol ->  RegisterSymbolIfNotExists;
 GetSymbolId[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Symbol ->  GetSymbolId;
 RegisterSymbolAsNew[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Symbol ->  RegisterSymbolAsNew;
 isExistentSymbolID[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Symbol ->  isExistentSymbolID;
 isExistentSymbol[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Symbol ->  isExistentSymbol;
 CreateUnknown[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Symbol ->  CreateUnknown;
 UserOptions[fillcolor=green, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1_Model_FileSystem ->  UserOptions;
 LogingSystemOptionsFile[fillcolor=yellow, style="rounded,filled", shape=diamond];
 UserOptions ->  LogingSystemOptionsFile;
 LogingSystemTraceFile[fillcolor=yellow, style="rounded,filled", shape=diamond];
 UserOptions ->  LogingSystemTraceFile;
 GetFileInfo[fillcolor=yellow, style="rounded,filled", shape=diamond];
 UserOptions ->  GetFileInfo;
 INotifyPropertyChanged[fillcolor=red, style="rounded,filled", shape=diamond];
 WindowsFormsApplication1_DataAccess_Options ->  INotifyPropertyChanged;
 LogNumbersNone[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogNumbersNone;
 LogNumbersResults[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogNumbersResults;
 LogNumbersParameters[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogNumbersParameters;
 LogNumbersCode[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogNumbersCode;
 LogObjectsNone[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogObjectsNone;
 LogObjectsResults[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogObjectsResults;
 LogObjectsParameters[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogObjectsParameters;
 LogObjectsCode[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogObjectsCode;
 LogRelationsNone[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogRelationsNone;
 LogRelationsResults[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogRelationsResults;
 LogRelationsParameters[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogRelationsParameters;
 LogRelationsCode[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogRelationsCode;
 LogLogicsNone[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogLogicsNone;
 LogLogicsResults[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogLogicsResults;
 LogLogicsParameters[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogLogicsParameters;
 LogLogicsCode[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  LogLogicsCode;
 levelNumbers[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  levelNumbers;
 levelObjects[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  levelObjects;
 levelRelations[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  levelRelations;
 levelLogics[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  levelLogics;
 OnPropertyChanged[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  OnPropertyChanged;
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1_Properties ->  [global::System_CodeDom_Compiler_GeneratedCodeAttribute;
 [global::System_ComponentModel_EditorBrowsableAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute ->  [global::System_ComponentModel_EditorBrowsableAttribute;
 [global::System_Serializable[fillcolor=red, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1_StructuredPriorityQue ->  [global::System_Serializable;
 [global::System_Serializable[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_Serializable ->  [global::System_Serializable;
 [global::System_Serializable[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_Serializable ->  [global::System_Serializable;
 [global::System_Serializable[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_Serializable ->  [global::System_Serializable;
 [global::System_Serializable[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_Serializable ->  [global::System_Serializable;
 [global::System_Serializable[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_Serializable ->  [global::System_Serializable;
 global::System_Data_DataRow[fillcolor=yellow, style="rounded,filled", shape=diamond];
 [global::System_Serializable ->  global::System_Data_DataRow;
 global::System_Data_DataRow[fillcolor=yellow, style="rounded,filled", shape=diamond];
 [global::System_Serializable ->  global::System_Data_DataRow;
 global::System_Data_DataRow[fillcolor=yellow, style="rounded,filled", shape=diamond];
 [global::System_Serializable ->  global::System_Data_DataRow;
 global::System_Data_DataRow[fillcolor=yellow, style="rounded,filled", shape=diamond];
 [global::System_Serializable ->  global::System_Data_DataRow;
 global::System_Data_DataRow[fillcolor=yellow, style="rounded,filled", shape=diamond];
 [global::System_Serializable ->  global::System_Data_DataRow;
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_Serializable ->  [global::System_CodeDom_Compiler_GeneratedCodeAttribute;
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_Serializable ->  [global::System_CodeDom_Compiler_GeneratedCodeAttribute;
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_Serializable ->  [global::System_CodeDom_Compiler_GeneratedCodeAttribute;
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_Serializable ->  [global::System_CodeDom_Compiler_GeneratedCodeAttribute;
 [global::System_CodeDom_Compiler_GeneratedCodeAttribute[fillcolor=yellow, style="rounded,filled", shape=elipse];
 [global::System_Serializable ->  [global::System_CodeDom_Compiler_GeneratedCodeAttribute;
 Form[fillcolor=orange, style="rounded,filled", shape=diamond];
 WindowsFormsApplication1_UI ->  Form;
 Show[fillcolor=yellow, style="rounded,filled", shape=elipse];
 Form ->  Show;
 CustomMessageBox[fillcolor=yellow, style="rounded,filled", shape=elipse];
 Form ->  CustomMessageBox;
 CustomMessageBox[fillcolor=orange, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1_UI ->  CustomMessageBox;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CustomMessageBox ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 CustomMessageBox ->  InitializeComponent;
 Form[fillcolor=red, style="rounded,filled", shape=diamond];
 WindowsFormsApplication1 ->  Form;
 InitializeSettings[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  InitializeSettings;
 DisplayMSDNReader[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  DisplayMSDNReader;
 InitializeDatabaseSelector[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  InitializeDatabaseSelector;
 Form1[fillcolor=yellow, style="rounded,filled", shape=elipse];
 Form ->  Form1;
 EvaluateInput[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  EvaluateInput;
 PrepareInput[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  PrepareInput;
 QueryTextBox_KeyUp[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  QueryTextBox_KeyUp;
 RegenerateSugestionList[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  RegenerateSugestionList;
 AutocompleteInput[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  AutocompleteInput;
 symbolsToolStripMenuItem_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  symbolsToolStripMenuItem_Click;
 serverToolStripMenuItem_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  serverToolStripMenuItem_Click;
 relationToolStripMenuItem_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  relationToolStripMenuItem_Click;
 evaluation [fillcolor=yellow, style="rounded,filled", shape=elipse];
 Form ->  evaluation ;
 sQLViewToolStripMenuItem_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  sQLViewToolStripMenuItem_Click;
 wEBViewToolStripMenuItem_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  wEBViewToolStripMenuItem_Click;
 codeToolStripMenuItem_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  codeToolStripMenuItem_Click;
 nSDNToolStripMenuItem_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  nSDNToolStripMenuItem_Click;
 advancedToolStripMenuItem_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  advancedToolStripMenuItem_Click;
 modeToolStripMenuItem_SelectedIndexChanged[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  modeToolStripMenuItem_SelectedIndexChanged;
 button2_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  button2_Click;
 toolStripComboBox1_SelectedIndexChanged[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  toolStripComboBox1_SelectedIndexChanged;
 button1_Click_1[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  button1_Click_1;
 button3_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  button3_Click;
 fileToolStripMenuItem1_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  fileToolStripMenuItem1_Click;
 databaseOptionToolStripMenuItem_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  databaseOptionToolStripMenuItem_Click;
 traceOprtionsToolStripMenuItem_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  traceOprtionsToolStripMenuItem_Click;
 frameworkManagerToolStripMenuItem_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  frameworkManagerToolStripMenuItem_Click;
 naturalLanguageProcessorToolStripMenuItem_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  naturalLanguageProcessorToolStripMenuItem_Click;
 createGraphVizDiagramToolStripMenuItem_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  createGraphVizDiagramToolStripMenuItem_Click;
 Form1[fillcolor=orange, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1 ->  Form1;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form1 ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form1 ->  InitializeComponent;
 MSDNReader[fillcolor=orange, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1_UI ->  MSDNReader;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 MSDNReader ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 MSDNReader ->  InitializeComponent;
 Form[fillcolor=orange, style="rounded,filled", shape=diamond];
 WindowsFormsApplication1 ->  Form;
 MyCode[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  MyCode;
 button1_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  button1_Click;
 MyCode[fillcolor=orange, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1 ->  MyCode;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 MyCode ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 MyCode ->  InitializeComponent;
 INotifyPropertyChanged[fillcolor=gray, style="rounded,filled", shape=diamond];
 WindowsFormsApplication1_DL ->  INotifyPropertyChanged;
 MyName[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  MyName;
 Parameter[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  Parameter;
 RefreshValue[fillcolor=yellow, style="rounded,filled", shape=elipse];
 INotifyPropertyChanged ->  RefreshValue;
 Location[fillcolor=yellow, style="rounded,filled", shape=diamond];
 INotifyPropertyChanged ->  Location;
 Form[fillcolor=red, style="rounded,filled", shape=diamond];
 WindowsFormsApplication1_UI ->  Form;
 ActualID[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  ActualID;
 fillParameters[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  fillParameters;
 FillGrid[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  FillGrid;
 Refresh[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  Refresh;
 InitializeParameters[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  InitializeParameters;
 AddParameter[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  AddParameter;
 button2_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  button2_Click;
 button1_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  button1_Click;
 dataGridView1_SelectionChanged[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  dataGridView1_SelectionChanged;
 //oThread_Suspend[fillcolor=yellow, style="rounded,filled", shape=elipse];
 dataGridView1_SelectionChanged ->  //oThread_Suspend;
 WatchParameters[fillcolor=orange, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1_UI ->  WatchParameters;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 WatchParameters ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 WatchParameters ->  InitializeComponent;
 WebView[fillcolor=orange, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1 ->  WebView;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 WebView ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 WebView ->  InitializeComponent;
 Form[fillcolor=red, style="rounded,filled", shape=diamond];
 WindowsFormsApplication1_UI ->  Form;
 DatabaseOptions[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  DatabaseOptions;
 Log[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  Log;
 OracleRadioButton_CheckedChanged[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  OracleRadioButton_CheckedChanged;
 MySqlRadioButton_CheckedChanged[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  MySqlRadioButton_CheckedChanged;
 SqlServerRadioButton_CheckedChanged[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  SqlServerRadioButton_CheckedChanged;
 PostgreeRadioButton_CheckedChanged[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  PostgreeRadioButton_CheckedChanged;
 SqLiteRadioButton_CheckedChanged[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  SqLiteRadioButton_CheckedChanged;
 DatabaseOptions[fillcolor=orange, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1_UI ->  DatabaseOptions;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 DatabaseOptions ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 DatabaseOptions ->  InitializeComponent;
 Form[fillcolor=green, style="rounded,filled", shape=diamond];
 WindowsFormsApplication1_UI ->  Form;
 TraceOptions[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  TraceOptions;
 logingOptionsModelReferince_PropertyChanged[fillcolor=yellow, style="rounded,filled", shape=elipse];
 Form ->  logingOptionsModelReferince_PropertyChanged;
 ResetFromDefaultsTextButton_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  ResetFromDefaultsTextButton_Click;
 TraceOptions[fillcolor=orange, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1_UI ->  TraceOptions;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 TraceOptions ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 TraceOptions ->  InitializeComponent;
 TestRelation[fillcolor=orange, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1_UI ->  TestRelation;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 TestRelation ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 TestRelation ->  InitializeComponent;
 Form[fillcolor=yellow, style="rounded,filled", shape=diamond];
 WindowsFormsApplication1_UI ->  Form;
 TestSentence[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  TestSentence;
 TestSentence[fillcolor=orange, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1_UI ->  TestSentence;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 TestSentence ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 TestSentence ->  InitializeComponent;
 Form[fillcolor=red, style="rounded,filled", shape=diamond];
 WindowsFormsApplication1_UI ->  Form;
 TestServer[fillcolor=yellow, style="rounded,filled", shape=elipse];
 Form ->  TestServer;
 EvaluateButton_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  EvaluateButton_Click;
 Evaluate[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  Evaluate;
 if [fillcolor=yellow, style="rounded,filled", shape=elipse];
 Evaluate ->  if ;
 Display[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  Display;
 Display[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  Display;
 CreateCheckBox_CheckedChanged[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  CreateCheckBox_CheckedChanged;
 DuplicateCheckBox_CheckedChanged[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  DuplicateCheckBox_CheckedChanged;
 TestServer[fillcolor=orange, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1_UI ->  TestServer;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 TestServer ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 TestServer ->  InitializeComponent;
 Form[fillcolor=gray, style="rounded,filled", shape=diamond];
 WindowsFormsApplication1_UI ->  Form;
 TestSymbol[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  TestSymbol;
 EvaluateButton_Click[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  EvaluateButton_Click;
 ParonymesListBox_SelectedIndexChanged[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  ParonymesListBox_SelectedIndexChanged;
 AcceptNewCheckBox_CheckedChanged[fillcolor=yellow, style="rounded,filled", shape=diamond];
 Form ->  AcceptNewCheckBox_CheckedChanged;
 TestSymbol[fillcolor=orange, style="rounded,filled", shape=elipse];
 WindowsFormsApplication1_UI ->  TestSymbol;
 Dispose[fillcolor=yellow, style="rounded,filled", shape=diamond];
 TestSymbol ->  Dispose;
 InitializeComponent[fillcolor=yellow, style="rounded,filled", shape=diamond];
 TestSymbol ->  InitializeComponent;

